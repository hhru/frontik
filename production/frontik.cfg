host = "0.0.0.0"
port = 9300
workers_count = 4

handlers_count = 150
autoreload = False
daemonize = True

pidfile_template = "/var/run/frontik.%(port)s.pid"

syslog = True
syslog_address = "/dev/log"
syslog_msg_max_length = 2047

loglevel = "debug"
logfile_template = "/var/log/frontik.%(port)s.log"
suppressed_loggers = [ 'tornado.httpclient', 'tornado.curl_httpclient', 'tornado.ioloop', 'frontik.handler.xsl' ]

graylog = True
graylog_host = "127.0.0.1"
graylog_port = 12201

from frontik.app import App
urls = [
    # ("/page", App("hh-xhh", "/usr/share/pyshared/xhh"))
]

debug_login = 'debug'
debug_password = 'debug'

timeout_multiplier = 1.
# wait this number of seconds (int) in workers before stopping IOLoop in each worker, should be a little less than supervisor_sigterm_timeout
stop_timeout = 4

# wait this number of seconds (int) in supervisor after sending SIGTERM to all workers and wait 0.1*workers_count seconds more after sending SIGKILL
supervisor_sigterm_timeout=5

# call long request handler if page did not finish after this amount of seconds
# remove or set to None to disable timeouts
long_request_timeout = None

# kill requests that did not finish after long_request_timeout
kill_long_requests = False

log_blocked_ioloop_timeout = 2.0

executor_type = 'threaded'
executor_pool_size=3
warn_no_jobs = True
